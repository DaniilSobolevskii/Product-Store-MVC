@using Microsoft.AspNetCore.Mvc.Routing
@model IndexModel;
@{
    ViewData["Title"] = "Home Page";
    Layout = "_MyLayout";
}

<h4 class="text-center">Products</h4>

<div class="text-md-center">

    <table class="table primary table-striped" id = "products" value = "@Model.Products">
        <tr>
            <th>id</th>
            <th>Название</th>
            <th>Описание</th>
            <th>Цена за штуку</th>
            <th>Количество</th>
            <th>Действия</th>
            <th>Тип</th>
           
        </tr>
        
    </table>
      
</div>

<div class ="align-content-around">
    <br>
    <div class = "col-4">
        <div class="input-group input-group-sm mb-3">
            <span class="input-group-text" >Название</span>
            <input  id = "nameInput" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
        </div>
        <div class="input-group input-group-sm mb-3">
            <span class="input-group-text"> Описание</span>
            <textarea  id = "descriptionInput" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default"></textarea>
        </div>
        <div class="input-group input-group-sm mb-3">
            <span class="input-group-text">Цена</span>
            <input  id = "priceInput" type="number" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
        </div>
        <div class="input-group input-group-sm mb-3">
            <span class="input-group-text" >Количество</span>
            <input id = "countInput" type="number" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
        </div>
        <div class="input-group mb-2">
            <label class="input-group-text">Тип продукта</label>
            <select class="form-select" id="typeInput">
                <option value="Undefined">-</option>
                <option value="Movie">Фильм</option>
                <option value="Book">Книга</option>
                <option value="Accessories">Другое</option>
            </select>
        </div>
        <input id = "idInput" hidden="hidden" type= "number" name="id" value=""><br>
    </div>
      

  

    
        
        <button onclick="addProduct()"> Сreate</button>
    
</div>

<script>
  
   
   async function ShowTable()
    {
        let response = await fetch(`Product/getProducts`, 
        {
            method: "GET",
            headers: {
              'Content-Type': 'application/json;charset=utf-8'
            }  
        });
        
        let model = await response.json();
        for (let i = 0; i< model.length; i++)
        {
            let product = model[i];
            updateTable(product);
           // setProduct(product.id,product);
            
        }
        
    }
       
   async function addProduct()
    {
        let newProduct = createProduct();
        
        let response = await fetch(`product/addProduct`, 
        {
            method: "POST",
            headers: {
              'Content-Type': 'application/json;charset=utf-8'
            },
            body: JSON.stringify(newProduct)
        });
        let model = await response.json();
     
        updateTable(model);
        
        
    }
    
    
    async function deleteProduct(id)
    {
         let deletedProduct = document.getElementById(`product_${id}`);
         let table = document.getElementById(`products`);
         
         deletedProduct.innerText="";
         
         await fetch(`product/${id}`, 
                {
                    method: "DELETE",
                    headers: {
                      'Content-Type': 'application/json;charset=utf-8'
                    }
                    
                });
       
    }
       
    function onEdit(id) // создаем инпуты , переопределяем кнопки 
    {
       // создаем inputы
        createInput("name",id);
        createInput("description",id);
        createInput("count",id);
        createInput("price",id);
        
       // Создаем кнопку на месте старой и определяем ее
        let editButton = document.getElementById(`button_one_${id}`);
        let sendButton = document.createElement("button");
        sendButton.id = `send_button_${id}`
        sendButton.innerText="Ok";
        sendButton.onclick =()=> { onSendUpdateClick(id)};
        editButton.replaceWith(sendButton);
        

   }
   
    function createInput(elementName,id)
    {
        
       let elementText = document.getElementById(`product_${elementName}_${id}`);
       let elementInput = document.createElement("input");
       elementInput.id = `product_${elementName}_input_${id}`;
       elementInput.value = elementText.innerText;
       elementText.innerHTML = "";
       elementText.appendChild(elementInput);
             
   }
        
    async function onSendUpdateClick(id) //  обновляем продукт и возвращаем кнопки
    {
       let updatedProduct = getProduct(id);
       
        await fetch(`product/${id}`, 
       {
           method: "POST",
           headers: {
             'Content-Type': 'application/json;charset=utf-8'
           },
           body: JSON.stringify(updatedProduct)
       });
       
      await onRefresh(id);
       
       let sendButton = document.getElementById(`send_button_${id}`); 
       let editButton = document.createElement("button");
       editButton.id = `button_one_${id}`;
       editButton.innerText = "✎";
       editButton.onclick = () => { onEdit(id); }
       sendButton.replaceWith(editButton);
      
   }
   
    async function onRefresh(id)//обновляем продукт в таблице из БД
    {
            
            let response = await fetch(`product/${id}`);
            let product = await response.json();
            
            setProduct(id, product)
        }
   
    function setProduct(id, product) // обновляем поля продукта из полей  
    {
        let productName = document.getElementById(`product_name_${id}`);
        productName.innerText = product.name;
        
        let productDescription = document.getElementById(`product_description_${id}`);
        productDescription.innerText = product.description;
        
        let productPrice = document.getElementById(`product_price_${id}`);
        productPrice.innerText = product.price;
        
        let productCount = document.getElementById(`product_count_${id}`);
        productCount.innerText = product.count;
        
    }
   
    function getProduct(id) // возвращаем продукт со значениями из таблицы
    {
         let productNameInput = document.getElementById(`product_name_input_${id}`);
         let name = productNameInput.value;
         
         let productDescriptionInput = document.getElementById(`product_description_input_${id}`);
         let description =productDescriptionInput.value;
         
         let productPriceInput = document.getElementById(`product_price_input_${id}`);
         let price =  productPriceInput.value;
         
         let productCountInput = document.getElementById(`product_count_input_${id}`);
         let count = productCountInput.value;
         
        let productType = document.getElementById(`product_type_${id}`);
        let ProductType = productType.innerText;
                
       
         return {
      
             id, 
             name,
             description,
             price,
             count,
             product_type: ProductType
         };
    }
    
    function createProduct() // берем значения для нового продукта из инпутов 
    {
        let nameInput = document.getElementById(`nameInput`);
        let name = nameInput.value;
        nameInput.value="";
        
        let descriptionInput = document.getElementById(`descriptionInput`);
        let description = descriptionInput.value;
        descriptionInput.value="";
        
        let priceInput = document.getElementById(`priceInput`);
        let price =  priceInput.value;
        priceInput.value="";
        
        let countInput = document.getElementById(`countInput`);
        let count = countInput.value;
        countInput.value="";
        
        let typeInput = document.getElementById(`typeInput`);
        let product_type =  typeInput.value;
         
    
        return {
            
            product_type,
            name,
            description,
            price,
            count
            
            };
    }
    function updateTable(newProduct)
    {
        let id = newProduct.id;
        let table= document.getElementById("products");
        let newRow = table.insertRow(-1);
        newRow.id = `product_${id}`;
        
        let idCell =  newRow.insertCell(0);
        idCell.id = `product_id_${id}`;
        idCell.innerText = id;
        
        let nameCell =  newRow.insertCell(1);
        nameCell.id = `product_name_${id}`;
        nameCell.innerText = newProduct.name;      
        
        let descriptionCell =  newRow.insertCell(2);
        descriptionCell.id = `product_description_${id}`;
        descriptionCell.innerText = newProduct.description;
        
        let priceCell =  newRow.insertCell(3);
        priceCell.id = `product_price_${id}`;
        priceCell.innerText = newProduct.price;        
      
        let countCell =  newRow.insertCell(4);
        countCell.id = `product_count_${id}`;
        countCell.innerText = newProduct.count;
        
        let typeCell =  newRow.insertCell(5);
        typeCell.id = `product_type_${id}`;
        typeCell.innerText = newProduct.product_type;
        
        let actionCell =  newRow.insertCell(6);
        actionCell.innerHTML = `<div  class="btn-group"><button id = "button_one_${id}" onclick = "onEdit(${id})">✎</button>`+` `+ `<button onclick="deleteProduct(${id})">⌫</button></div>`
        
       
               
    }
    ShowTable();
   
</script>
@section Footer
{
    Мой копирайтинг
}
